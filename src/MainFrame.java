
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;



/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Andy Shaffer
 */
public class MainFrame extends javax.swing.JFrame {
    databaseInterface apollo = new databaseInterface();
    Statement statement = null;
    int myDnum = 0;
    String mySSN = "";
    boolean added = false;
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame(databaseInterface dbconnection, Statement stmt) {
        initComponents();
        this.setComboBoxes();
        this.setLocationRelativeTo(null);
        apollo = dbconnection;
        statement = stmt;
        PanelAddEmployee.setVisible(false);
        PanelDependent.setVisible(false);
        PanelProjects.setVisible(false);
        PanelMainMenu.setVisible(true);
        PanelOutput.setVisible(false);
      

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelDependent = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        DependentsNext = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        Month1 = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        Day1 = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        Year1 = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        LabelFname1 = new javax.swing.JLabel();
        Fname1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        Sex1 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        Relationship = new javax.swing.JTextField();
        PanelAddEmployee = new javax.swing.JPanel();
        LabelFname = new javax.swing.JLabel();
        Fname = new javax.swing.JTextField();
        LabelMinit = new javax.swing.JLabel();
        Minit = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Lname = new javax.swing.JTextField();
        LabelSSN = new javax.swing.JLabel();
        SSN = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Month = new javax.swing.JComboBox();
        Day = new javax.swing.JComboBox();
        Year = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        City = new javax.swing.JTextField();
        State = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        Sex = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        Salary = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        DNO = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        ButtonAddEmpAdd = new javax.swing.JButton();
        ButtonAddEmpCancel = new javax.swing.JButton();
        hasDependentsBox = new javax.swing.JCheckBox();
        PanelMainMenu = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaPart2 = new javax.swing.JTextArea();
        Button2dot1 = new javax.swing.JButton();
        Button2dot2 = new javax.swing.JButton();
        ButtonAddEmployee = new javax.swing.JButton();
        CheckRules = new javax.swing.JButton();
        PanelProjects = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        ProjectComplete = new javax.swing.JButton();
        pd1 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        phours5 = new javax.swing.JTextField();
        phours1 = new javax.swing.JTextField();
        phours2 = new javax.swing.JTextField();
        phours3 = new javax.swing.JTextField();
        phours4 = new javax.swing.JTextField();
        pd2 = new javax.swing.JComboBox();
        pd3 = new javax.swing.JComboBox();
        pd4 = new javax.swing.JComboBox();
        pd5 = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        projectlist = new javax.swing.JTextArea();
        jLabel23 = new javax.swing.JLabel();
        PanelOutput = new javax.swing.JPanel();
        ProjectComplete1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TextReport = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuDisconnect = new javax.swing.JMenu();
        Disconnect = new javax.swing.JMenuItem();
        MenuExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("HR Anywhere V0.12");
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        jLabel13.setText("Dependents");

        DependentsNext.setText("Next");
        DependentsNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DependentsNextActionPerformed(evt);
            }
        });

        jLabel15.setText("Birthdate:");

        Month1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Month1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Month1ActionPerformed(evt);
            }
        });
        Month1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                Month1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel18.setText("Month");

        Day1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel19.setText("Day");

        Year1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel20.setText("Year");

        LabelFname1.setText("First Name:");

        jLabel21.setText("Sex");

        Sex1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel22.setText("Relationship");

        javax.swing.GroupLayout PanelDependentLayout = new javax.swing.GroupLayout(PanelDependent);
        PanelDependent.setLayout(PanelDependentLayout);
        PanelDependentLayout.setHorizontalGroup(
            PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDependentLayout.createSequentialGroup()
                .addGroup(PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDependentLayout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(jLabel13))
                    .addGroup(PanelDependentLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(LabelFname1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelDependentLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(44, 44, 44)
                                .addGroup(PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(Month1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(Day1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(Year1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(PanelDependentLayout.createSequentialGroup()
                                .addComponent(Fname1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81)
                                .addComponent(jLabel21)
                                .addGap(18, 18, 18)
                                .addComponent(Sex1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81)
                                .addComponent(jLabel22)
                                .addGap(18, 18, 18)
                                .addComponent(Relationship, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(PanelDependentLayout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelDependentLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelDependentLayout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(DependentsNext, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        PanelDependentLayout.setVerticalGroup(
            PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDependentLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel13)
                .addGap(54, 54, 54)
                .addGroup(PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelFname1)
                    .addGroup(PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Fname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Sex1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21)
                        .addComponent(jLabel22)
                        .addComponent(Relationship, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addGroup(PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(jLabel18)))
                .addGap(18, 18, 18)
                .addGroup(PanelDependentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Month1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Day1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Year1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(DependentsNext)
                .addGap(24, 24, 24))
        );

        getContentPane().add(PanelDependent, "card4");

        LabelFname.setText("First Name:");

        LabelMinit.setText("Middle Initial:");

        Minit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinitActionPerformed(evt);
            }
        });

        jLabel3.setText("Last Name:");

        LabelSSN.setText("SSN:");

        SSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSNActionPerformed(evt);
            }
        });

        jLabel1.setText("Birthdate:");

        Month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthActionPerformed(evt);
            }
        });
        Month.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                MonthAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Day.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("City");

        jLabel4.setText("State");

        jLabel5.setText("New Employee Information");

        jLabel6.setText("Day");

        jLabel7.setText("Year");

        jLabel8.setText("Month");

        Sex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Sex");

        jLabel10.setText("Salary");

        jLabel11.setText("Dept. No.:");

        DNO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNOActionPerformed(evt);
            }
        });

        jLabel12.setText("Email:");

        ButtonAddEmpAdd.setText("Next");
        ButtonAddEmpAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddEmpAddActionPerformed(evt);
            }
        });

        ButtonAddEmpCancel.setText("Cancel");
        ButtonAddEmpCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddEmpCancelActionPerformed(evt);
            }
        });

        hasDependentsBox.setText(" has Dependents");

        javax.swing.GroupLayout PanelAddEmployeeLayout = new javax.swing.GroupLayout(PanelAddEmployee);
        PanelAddEmployee.setLayout(PanelAddEmployeeLayout);
        PanelAddEmployeeLayout.setHorizontalGroup(
            PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAddEmployeeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(327, 327, 327))
            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                        .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(SSN, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(LabelSSN))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                        .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelAddEmployeeLayout.createSequentialGroup()
                                    .addGap(13, 13, 13)
                                    .addComponent(jLabel9)
                                    .addGap(18, 18, 18)
                                    .addComponent(Sex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(151, 151, 151)
                                    .addComponent(jLabel1)
                                    .addGap(44, 44, 44)
                                    .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(24, 24, 24)
                                    .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(Day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(23, 23, 23)
                                    .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(DNO, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(63, 63, 63)
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(Salary, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                        .addGap(229, 229, 229)
                                        .addComponent(ButtonAddEmpAdd)))
                                .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(jLabel12)
                                        .addGap(26, 26, 26)
                                        .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(ButtonAddEmpCancel)))))
                        .addContainerGap(28, Short.MAX_VALUE))
                    .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                        .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                .addComponent(LabelFname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Fname, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(City, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(106, 106, 106)
                        .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                .addComponent(LabelMinit)
                                .addGap(18, 18, 18)
                                .addComponent(Minit, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(45, 45, 45)
                                .addComponent(State, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                .addComponent(hasDependentsBox)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                                .addComponent(Lname, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );

        PanelAddEmployeeLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ButtonAddEmpAdd, ButtonAddEmpCancel});

        PanelAddEmployeeLayout.setVerticalGroup(
            PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAddEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelFname)
                    .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(LabelMinit)
                        .addComponent(Minit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(State, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(City, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(hasDependentsBox)))
                .addGap(40, 40, 40)
                .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelSSN)
                    .addComponent(SSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(Sex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(31, 31, 31)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DNO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(Salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(PanelAddEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonAddEmpAdd)
                    .addComponent(ButtonAddEmpCancel))
                .addGap(22, 22, 22))
        );

        getContentPane().add(PanelAddEmployee, "card3");

        TextAreaPart2.setEditable(false);
        TextAreaPart2.setColumns(20);
        TextAreaPart2.setRows(5);
        jScrollPane1.setViewportView(TextAreaPart2);

        Button2dot1.setText("Part 2.1");
        Button2dot1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2dot1ActionPerformed(evt);
            }
        });

        Button2dot2.setText("Part 2.2");
        Button2dot2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2dot2ActionPerformed(evt);
            }
        });

        ButtonAddEmployee.setText("Add Employee");
        ButtonAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddEmployeeActionPerformed(evt);
            }
        });

        CheckRules.setText("Check Rules");
        CheckRules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckRulesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelMainMenuLayout = new javax.swing.GroupLayout(PanelMainMenu);
        PanelMainMenu.setLayout(PanelMainMenuLayout);
        PanelMainMenuLayout.setHorizontalGroup(
            PanelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMainMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelMainMenuLayout.createSequentialGroup()
                        .addComponent(Button2dot1)
                        .addGap(38, 38, 38)
                        .addComponent(Button2dot2)
                        .addGap(44, 44, 44)
                        .addComponent(ButtonAddEmployee)
                        .addGap(38, 38, 38)
                        .addComponent(CheckRules)
                        .addGap(0, 168, Short.MAX_VALUE)))
                .addContainerGap())
        );

        PanelMainMenuLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Button2dot1, Button2dot2, ButtonAddEmployee, CheckRules});

        PanelMainMenuLayout.setVerticalGroup(
            PanelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMainMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button2dot1)
                    .addComponent(Button2dot2)
                    .addComponent(ButtonAddEmployee)
                    .addComponent(CheckRules))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(PanelMainMenu, "card2");

        jLabel14.setText("Project Assignment");

        ProjectComplete.setText("Complete");
        ProjectComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProjectCompleteActionPerformed(evt);
            }
        });

        pd1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pd1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Project");

        jLabel17.setText("Hours");

        phours1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phours1ActionPerformed(evt);
            }
        });
        phours1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phours1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                phours1FocusLost(evt);
            }
        });

        phours2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phours2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                phours2FocusLost(evt);
            }
        });

        pd2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        pd3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        pd4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        pd5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        projectlist.setColumns(20);
        projectlist.setRows(5);
        jScrollPane4.setViewportView(projectlist);

        jLabel23.setText("Projects Available");

        javax.swing.GroupLayout PanelProjectsLayout = new javax.swing.GroupLayout(PanelProjects);
        PanelProjects.setLayout(PanelProjectsLayout);
        PanelProjectsLayout.setHorizontalGroup(
            PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProjectsLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelProjectsLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(13, 13, 13))
                    .addComponent(pd5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(phours5)
                    .addComponent(phours3)
                    .addComponent(phours4)
                    .addGroup(PanelProjectsLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel17))
                    .addComponent(phours1)
                    .addComponent(phours2))
                .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProjectsLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(126, Short.MAX_VALUE))
                    .addGroup(PanelProjectsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addGap(191, 191, 191))))
            .addGroup(PanelProjectsLayout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProjectComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelProjectsLayout.setVerticalGroup(
            PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProjectsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel14)
                .addGap(46, 46, 46)
                .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel23))
                .addGap(22, 22, 22)
                .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProjectsLayout.createSequentialGroup()
                        .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phours1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phours2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phours3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phours4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pd5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phours5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(ProjectComplete)
                .addGap(33, 33, 33))
        );

        getContentPane().add(PanelProjects, "card4");

        ProjectComplete1.setText("OK");
        ProjectComplete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProjectComplete1ActionPerformed(evt);
            }
        });

        TextReport.setColumns(20);
        TextReport.setRows(5);
        jScrollPane3.setViewportView(TextReport);

        javax.swing.GroupLayout PanelOutputLayout = new javax.swing.GroupLayout(PanelOutput);
        PanelOutput.setLayout(PanelOutputLayout);
        PanelOutputLayout.setHorizontalGroup(
            PanelOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOutputLayout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(ProjectComplete1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(361, Short.MAX_VALUE))
            .addGroup(PanelOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        PanelOutputLayout.setVerticalGroup(
            PanelOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProjectComplete1)
                .addGap(30, 30, 30))
        );

        getContentPane().add(PanelOutput, "card4");

        MenuDisconnect.setText("Connection");

        Disconnect.setText("Disconnect");
        Disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisconnectActionPerformed(evt);
            }
        });
        MenuDisconnect.add(Disconnect);

        MenuExit.setText("Exit");
        MenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuExitActionPerformed(evt);
            }
        });
        MenuDisconnect.add(MenuExit);

        jMenuBar1.add(MenuDisconnect);

        jMenu2.setText("Action");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisconnectActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,"Disconnected from Apollo Database", "Disconncted",JOptionPane.PLAIN_MESSAGE);
        apollo.dropConnection();
    }//GEN-LAST:event_DisconnectActionPerformed

    private void MenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuExitActionPerformed
        // TODO add your handling code here:
        apollo.dropConnection();
        System.exit(0);
    }//GEN-LAST:event_MenuExitActionPerformed

    private void Button2dot1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2dot1ActionPerformed
        TextAreaPart2.setText("");
        TextAreaPart2.append("*** SEARCH IN PROGRESS *** ");
        try {
            // TODO add your handling code here:
            ResultSet results = statement.executeQuery("select ssn,lname from employee e,department d where e.dno = d.dnumber and d.dname = 'Research'");
            TextAreaPart2.setText("");
            TextAreaPart2.append("***** List of Employees who work in Research Department *****\n\n");
            TextAreaPart2.append("SSN              Last name\n");
            while (results.next())
            {
                int ssn = results.getInt(1);
                String last = results.getString(2);
                TextAreaPart2.append("" + ssn + "  " + last + "\n");

            }
            TextAreaPart2.append("\n\n\n***** DONE *****\n");
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button2dot1ActionPerformed

    private void Button2dot2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2dot2ActionPerformed
        TextAreaPart2.setText("");
        TextAreaPart2.append("*** SEARCH IN PROGRESS *** ");
        try {
            // TODO add your handling code here:
            ResultSet results = statement.executeQuery("select  e.ssn, e.lname, wo.hours from employee e,works_on wo, project p where e.ssn = wo.essn and wo.pno=p.pnumber and p.pname = 'ProductZ'");
            TextAreaPart2.setText("");
            TextAreaPart2.append("***** List of Employees who work in Houston on ProductZ *****\n\n");
            TextAreaPart2.append("SSN        Last name   Hours\n");
            while (results.next())
            {
                    int ssn = results.getInt(1);
                    String last = results.getString(2);
                    int hours = results.getInt(3);

                    int size = 0;
                    String offset = "";
                    if (last.length() < 12)
                            size = 12 - last.length();
                    for(int i=0; i < size;i++)
                            offset += " ";
                     TextAreaPart2.append("" + ssn  + "  " + last + offset + hours +"\n");
            }
            TextAreaPart2.append("\n\n\n***** DONE *****\n");
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button2dot2ActionPerformed

    private void ButtonAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddEmployeeActionPerformed
        // TODO add your handling code here:
        this.resetEmployeeTextFields();
        added = false;
        PanelAddEmployee.setVisible(true);
        PanelDependent.setVisible(false);
        PanelMainMenu.setVisible(false);
        PanelProjects.setVisible(false);
        
        
        
    }//GEN-LAST:event_ButtonAddEmployeeActionPerformed

    private void MinitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MinitActionPerformed

    private void SSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SSNActionPerformed

    private void MonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonthActionPerformed

    private void MonthAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_MonthAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_MonthAncestorAdded

    private void DNOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DNOActionPerformed

    private void resetEmployeeTextFields() {
        Fname.setText("");
        Minit.setText("");
        Lname.setText("");
        SSN.setText("");
        Month.setSelectedIndex(0);
        Day.setSelectedIndex(0);
        Year.setSelectedIndex(0);
        hasDependentsBox.setSelected(false);
        Sex.setSelectedIndex(0);
        City.setText("");
        State.setText("");
        Salary.setText("");
        DNO.setText("");
        Email.setText("");
    }
    
    private void ButtonAddEmpAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddEmpAddActionPerformed
            boolean validData = true;
            // TODO add your handling code here:
            //ResultSet results = null;
            int row = 0;
            String fname=Fname.getText();
            if(fname.length() > 15 || fname.length() < 1)
            {
                validData = false;
                JOptionPane.showMessageDialog(this,"First Name must be between 1 -15 characters", "ERROR",JOptionPane.ERROR_MESSAGE);
            }   
            String minit=Minit.getText();
            if(minit.length() != 1)
            {
                validData = false;
                JOptionPane.showMessageDialog(this,"Middle Initial must be one character.", "ERROR",JOptionPane.ERROR_MESSAGE);
            }   
            String lname=Lname.getText();
            if(lname.length() > 15 || lname.length() < 1)
            {
                validData = false;
                JOptionPane.showMessageDialog(this," Last Name must be between 1 -15 characters", "ERROR",JOptionPane.ERROR_MESSAGE);
            }   
            String ssn=SSN.getText();
            if(ssn.length() != 9  )
            {
                validData = false;
                JOptionPane.showMessageDialog(this," SSN must be 9 numbers (no spaces or dashes)", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
            else if(this.ssnExists(Integer.parseInt(ssn)))
            {    
                validData = false;
                JOptionPane.showMessageDialog(this,"SSN already exists in Database", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
                
               
            String month = (String)Month.getSelectedItem();
            String day = (String)Day.getSelectedItem();
            String year = "0";
            Integer yearInt= Integer.parseInt((String)Year.getSelectedItem());
            if(yearInt >= 2000)
                yearInt -= 2000;
            else
                yearInt -= 1900;
            if (yearInt <= 10)
                year += yearInt.toString();
            else
                year = yearInt.toString();
            String city = City.getText();
            String state = State.getText();
            if(city.length() > 15 || city.length() < 1 || state.length() > 15 || state.length() < 1)
            {
                validData = false;
                JOptionPane.showMessageDialog(this," City and State must be between 1 -15 characters", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
            String address = city + "," + state;
            String sex =(String)Sex.getSelectedItem();
            int salary = 0;
            if(Salary.getText().length() == 0 ) {
                validData = false;
                JOptionPane.showMessageDialog(this," Salary field must have a number.", "ERROR",JOptionPane.ERROR_MESSAGE);
            } else
                salary = Integer.parseInt(Salary.getText());
            int dno = 0;
            if(DNO.getText().length() == 0) {
                validData = false;
                JOptionPane.showMessageDialog(this," Department number must be a valid one (1,4,5)", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
            else
                dno = Integer.parseInt(DNO.getText());
           
            String email =(String)Email.getText();
            if(email == null || "".equals(email))
                email = "null";
            String superssn = "";
            
    if(validData && added == false) {
       
       try {
                ResultSet results = statement.executeQuery("select mgrssn from department where dnumber=" + dno );
                    while (results.next())
                       superssn = results.getString(1);
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }


        try {
              row = statement.executeUpdate("insert into employee values('" + fname + "','" + minit + "','" + lname + "','" + ssn + "'," + "to_date('"+day+"."+month+"."+year+"','DD.MM.YYYY')"+ ",'" + address + "','" + sex +"',"+ salary + ",'" + superssn + "'," + dno + ",'" + email +"')");
              //row = statement.executeUpdate("insert into employee (fname,lname,ssn) values('" + fname + "','" + lname + "','" + ssn + "')");
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            System.out.println("insert into employee values('" + fname + "','" + minit + "','" + lname + "','" + ssn + "'," + "to_date('"+day+"."+month+"."+year+"','DD.MM.YYYY')"+ ",'" + address + "','" + sex +"',"+ salary + ",'" + superssn + "'," + dno + ",'" + email +"')");
            System.out.println("***** " + row + " row(s) inserted *****");
            if(row == 1)
            {
                TextReport.setText("");
                TextReport.append("***** NEW EMPLOYEE REPORT *****\n\n");
                TextReport.append("*** PERSONAL INFORMATION  ***\n");
                TextReport.append("Name: " + fname + " " + minit + " " + lname + "\n");
                TextReport.append("SSN: " + ssn + "  Birth: " + month +"/"+day+"/"+year+ "\n");
                TextReport.append("Address: " + address + "  Sex: " + sex +"\n\n" );
                TextReport.append("*** DEPARTMENT ASSIGNMENT ***\n");
                TextReport.append("Dept No: " + dno + "  SuperSSN: " + superssn +"\n" );
                TextReport.append("Salary: " + salary + "  Email: " + email +"\n\n" );
                myDnum = dno;
                mySSN= ssn;
                added = true;
                
                
            }

            this.resetProjectBoxes();
            if(hasDependentsBox.isSelected()) {
                PanelAddEmployee.setVisible(false);
                PanelDependent.setVisible(true);
                PanelMainMenu.setVisible(false);
                PanelProjects.setVisible(false);
                resetDependentTextFields();
                ListDependents();
            }
            else
            {
                this.setProjectComboBoxesAndTextArea(myDnum);
                PanelDependent.setVisible(false);
                PanelProjects.setVisible(true);  
                PanelAddEmployee.setVisible(false);
                PanelMainMenu.setVisible(false);
            }
    }

        
     
    }//GEN-LAST:event_ButtonAddEmpAddActionPerformed

    private void ButtonAddEmpCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddEmpCancelActionPerformed
        // TODO add your handling code here:
        PanelAddEmployee.setVisible(false);
        PanelDependent.setVisible(false);
        PanelMainMenu.setVisible(true);
        PanelProjects.setVisible(false);
        PanelOutput.setVisible(false);
    }//GEN-LAST:event_ButtonAddEmpCancelActionPerformed

    private void resetProjectBoxes() {
        phours1.setText("");
        phours2.setText("");
        phours3.setText("");
        phours4.setText("");
        phours5.setText("");
        pd1.setSelectedIndex(0);
        pd2.setSelectedIndex(0);
        pd3.setSelectedIndex(0);
        pd4.setSelectedIndex(0);
        pd5.setSelectedIndex(0);
    }
    
    private boolean repeatProjects() {
        String[] projects = new String[] {pd1.getSelectedItem().toString(),pd2.getSelectedItem().toString(),pd3.getSelectedItem().toString(),pd4.getSelectedItem().toString(),pd5.getSelectedItem().toString()};
        String[] phours = new String[] {phours1.getText().toString(),phours2.getText().toString(),phours3.getText().toString(),phours4.getText().toString(),phours5.getText().toString()};
        int size = projects.length;  
      
        for(int i = 0; i < size; i ++) {
            if("".equals(projects[i]) && !"".equals(phours[i]) || "".equals(phours[i]) && !"".equals(projects[i]))
                return true;
            for(int j = 1; j < size; j++){
                if(i == j)
                    j++;
                if("".equals(projects[i]))
                    j = size;
                else
                    if(projects[i].equals(projects[j]))
                    {    
                        System.out.println(projects[i] + " "+ projects[j]);
                        return true;
                    }
            }
            
        }
        return false;
    }
    
    private boolean departmentProjectAssigned(){
        String[] projects = new String[] {pd1.getSelectedItem().toString(),pd2.getSelectedItem().toString(),pd3.getSelectedItem().toString(),pd4.getSelectedItem().toString(),pd5.getSelectedItem().toString()};
        int size = projects.length;
        int dnum =0;
              
        for(int i = 0; i < size; i ++) {
            if(!"".equals(projects[i])){
                try {
                    ResultSet results = statement.executeQuery("select dnum from project where pnumber = " + Integer.parseInt(projects[i]));
                    while (results.next())
                    {
                        dnum = results.getInt(1);
                    }
                    if (dnum == myDnum)
                        return true;
                     
                } catch (SQLException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
           
          
            }
        }
        return false;
    }
    
    
    private boolean noProjectsSelected() {
        if ("".equals(pd1.getSelectedItem().toString()) && "".equals(pd2.getSelectedItem().toString()) && "".equals(pd3.getSelectedItem().toString()) && "".equals(pd4.getSelectedItem().toString()) && "".equals(pd5.getSelectedItem().toString()))
           return true;
        return false;
    }
        
    
    private void ProjectCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProjectCompleteActionPerformed
        // TODO add your handling code here:
         int row = 0;
         
         if(this.calcProjectHours() != 40 )
            JOptionPane.showMessageDialog(this,"Hours must total 40. No more. No Less ", "ERROR",JOptionPane.ERROR_MESSAGE);
         else if (this.noProjectsSelected() || repeatProjects())
             JOptionPane.showMessageDialog(this,"Duplicate projects or project/hour mismatch found ", "ERROR",JOptionPane.ERROR_MESSAGE);
         else if (!departmentProjectAssigned())
             JOptionPane.showMessageDialog(this,"Please assign at least one department project to employee", "ERROR",JOptionPane.ERROR_MESSAGE);
         else {
                TextReport.append("*** PROJECT ASSIGNMENT ***\n");
                
                String[] projects = new String[] {pd1.getSelectedItem().toString(),pd2.getSelectedItem().toString(),pd3.getSelectedItem().toString(),pd4.getSelectedItem().toString(),pd5.getSelectedItem().toString()};
                String[] phours = new String[] {phours1.getText().toString(),phours2.getText().toString(),phours3.getText().toString(),phours4.getText().toString(),phours5.getText().toString()}; 

                for(int i = 0; i < 5;i++) {
                    if(!"".equals(projects[i])){
                         
                         try {
                            row = statement.executeUpdate("insert into works_on values('" + mySSN + "','" + projects[i] + "','" + phours[i] +"')");
                            //row = statement.executeUpdate("insert into employee (fname,lname,ssn) values('" + fname + "','" + lname + "','" + ssn + "')");
                          } catch (SQLException ex) {
                              Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                          }
                           
                          System.out.println("insert into works_on values('" + mySSN + "','" + projects[i] + "','" + phours[i] +"')");
                          System.out.println("***** " + row + " row(s) inserted *****");
                          if(row == 1)
                          {
                    
                              TextReport.append("Project #: " + projects[i] + "  Hours: " + phours[i] +  "\n");
                          }

                    }
                        
                }

                TextReport.append("\n***** END OF REPORT  *****\n");    
                PanelProjects.setVisible(false);
                PanelAddEmployee.setVisible(false);
                PanelDependent.setVisible(false);
                PanelMainMenu.setVisible(false);
                PanelOutput.setVisible(true);
  
        }
        
    }//GEN-LAST:event_ProjectCompleteActionPerformed

    private void Month1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_Month1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_Month1AncestorAdded

    private void Month1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Month1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Month1ActionPerformed

    private void DependentsNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DependentsNextActionPerformed
        // TODO add your handling code here:
        this.setProjectComboBoxesAndTextArea(myDnum);
        PanelDependent.setVisible(false);
        PanelProjects.setVisible(true);
        PanelAddEmployee.setVisible(false);
        PanelMainMenu.setVisible(false);

    }//GEN-LAST:event_DependentsNextActionPerformed
    
    private void resetDependentTextFields() {
        Fname1.setText("");
        Month1.setSelectedIndex(0);
        Day1.setSelectedIndex(0);
        Year1.setSelectedIndex(0);
        Sex1.setSelectedIndex(0);
        Relationship.setText("");
  
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean validData = true;
        int row = 0;
        String essn=SSN.getText();
        String fname=Fname1.getText();
        if(fname.length() > 15 || fname.length() < 1)
            {
                validData = false;
                JOptionPane.showMessageDialog(this,"First Name must be between 1 -15 characters", "ERROR",JOptionPane.ERROR_MESSAGE);
            }   
        String sex =(String)Sex1.getSelectedItem();
        String month = (String)Month1.getSelectedItem();
            String day = (String)Day1.getSelectedItem();
            String year = "0";
            Integer yearInt= Integer.parseInt((String)Year1.getSelectedItem());
            if(yearInt >= 2000)
                yearInt -= 2000;
            else
                yearInt -= 1900;
            if (yearInt <= 10)
                year += yearInt.toString();
            else
                year = yearInt.toString();
         String relationship= Relationship.getText();
         if(relationship.length() > 8 || relationship.length() < 1)
            {
                validData = false;
                JOptionPane.showMessageDialog(this,"Relationship must be between 1 -8 characters", "ERROR",JOptionPane.ERROR_MESSAGE);
            }   
        if(validData){
            try {
            row = statement.executeUpdate("insert into dependent values('" + essn + "','" + fname + "','" + sex + "'," + "to_date('"+day+"."+month+"."+year+"','DD.MM.YYYY')"+ ",'" + relationship +"')");
            //row = statement.executeUpdate("insert into employee (fname,lname,ssn) values('" + fname + "','" + lname + "','" + ssn + "')");
          } catch (SQLException ex) {
              Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
          }
          
          System.out.println("insert into dependent values('" + essn + "','" + fname + "','" + sex + "'," + "to_date('"+day+"."+month+"."+year+"','DD.MM.YYYY')"+ ",'" + relationship +"')");
          System.out.println("*****" + row + " row(s) inserted *****");
          ListDependents();
          if(row == 1) {
                  TextReport.append("*** DEPENDENT  ***\n");
                  TextReport.append("Name: " + fname + "  Sex: " + sex +"\n");
                  TextReport.append("Birth: " + month +"/"+day+"/"+year+ "\n");
                  TextReport.append("Relationship: " + relationship + "\n\n" );
                  this.resetDependentTextFields();
          }
                
        }
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ProjectComplete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProjectComplete1ActionPerformed
        // TODO add your handling code here:
        PanelMainMenu.setVisible(true);
        PanelOutput.setVisible(false);
    }//GEN-LAST:event_ProjectComplete1ActionPerformed

    private void CheckRulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckRulesActionPerformed
        // TODO add your handling code here:
         TextAreaPart2.setText("");
        TextAreaPart2.append("*** SEARCH IN PROGRESS *** ");
        try {
            // TODO add your handling code here:
            ResultSet results = statement.executeQuery("select  e.ssn, e.lname, wo.hours from employee e,works_on wo, project p where e.ssn = wo.essn and wo.pno=p.pnumber and p.pname = 'ProductZ'");
            TextAreaPart2.setText("");
            TextAreaPart2.append("***** List of Employees who work in Houston on ProductZ *****\n\n");
            TextAreaPart2.append("SSN        Last name   Hours\n");
            while (results.next())
            {
                    int ssn = results.getInt(1);
                    String last = results.getString(2);
                    int hours = results.getInt(3);

                    int size = 0;
                    String offset = "";
                    if (last.length() < 12)
                            size = 12 - last.length();
                    for(int i=0; i < size;i++)
                            offset += " ";
                     TextAreaPart2.append("" + ssn  + "  " + last + offset + hours +"\n");
            }
            TextAreaPart2.append("\n\n\n***** DONE *****\n");
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CheckRulesActionPerformed

    private void pd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pd1ActionPerformed

    private void phours1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phours1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phours1ActionPerformed

    private void phours1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phours1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_phours1FocusGained

    private void phours1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phours1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_phours1FocusLost

    private void phours2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phours2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_phours2FocusGained

    private void phours2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phours2FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_phours2FocusLost

    private void ListDependents() {
        jTextArea1.setText("");
        String essn=SSN.getText();
        try {
            // TODO add your handling code here:
            ResultSet results = statement.executeQuery("select dependent_name, sex, to_char(bdate, 'mm/dd/yy'), relationship from dependent where essn = "+ essn);
            jTextArea1.setText("");
            jTextArea1.append("***** List of Dependents for SSN " + essn + " *****\n");
            //DependentTextArea.append("SSN              Last name\n");
            while (results.next())
            {
                String fname = results.getString(1);
                String sex = results.getString(2);
                String bdate = results.getString(3);
                String relation = results.getString(4);
                jTextArea1.append("" + fname + "  " + sex + "  " + bdate + "  " + relation + "\n");

            }
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    
    private boolean ssnExists(int ssn) {
        int count = 0;
        try {
            // TODO add your handling code here:
            ResultSet results = statement.executeQuery("select count(*) from employee where ssn = "+ ssn);
            while (results.next())
            {
                count = results.getInt(1);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       if (count > 0)
          return true;
            
       return false;
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button2dot1;
    private javax.swing.JButton Button2dot2;
    private javax.swing.JButton ButtonAddEmpAdd;
    private javax.swing.JButton ButtonAddEmpCancel;
    private javax.swing.JButton ButtonAddEmployee;
    private javax.swing.JButton CheckRules;
    private javax.swing.JTextField City;
    private javax.swing.JTextField DNO;
    private javax.swing.JComboBox Day;
    private javax.swing.JComboBox Day1;
    private javax.swing.JButton DependentsNext;
    private javax.swing.JMenuItem Disconnect;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField Fname;
    private javax.swing.JTextField Fname1;
    private javax.swing.JLabel LabelFname;
    private javax.swing.JLabel LabelFname1;
    private javax.swing.JLabel LabelMinit;
    private javax.swing.JLabel LabelSSN;
    private javax.swing.JTextField Lname;
    private javax.swing.JMenu MenuDisconnect;
    private javax.swing.JMenuItem MenuExit;
    private javax.swing.JTextField Minit;
    private javax.swing.JComboBox Month;
    private javax.swing.JComboBox Month1;
    private javax.swing.JPanel PanelAddEmployee;
    private javax.swing.JPanel PanelDependent;
    private javax.swing.JPanel PanelMainMenu;
    private javax.swing.JPanel PanelOutput;
    private javax.swing.JPanel PanelProjects;
    private javax.swing.JButton ProjectComplete;
    private javax.swing.JButton ProjectComplete1;
    private javax.swing.JTextField Relationship;
    private javax.swing.JTextField SSN;
    private javax.swing.JTextField Salary;
    private javax.swing.JComboBox Sex;
    private javax.swing.JComboBox Sex1;
    private javax.swing.JTextField State;
    private javax.swing.JTextArea TextAreaPart2;
    private javax.swing.JTextArea TextReport;
    private javax.swing.JComboBox Year;
    private javax.swing.JComboBox Year1;
    private javax.swing.JCheckBox hasDependentsBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox pd1;
    private javax.swing.JComboBox pd2;
    private javax.swing.JComboBox pd3;
    private javax.swing.JComboBox pd4;
    private javax.swing.JComboBox pd5;
    private javax.swing.JTextField phours1;
    private javax.swing.JTextField phours2;
    private javax.swing.JTextField phours3;
    private javax.swing.JTextField phours4;
    private javax.swing.JTextField phours5;
    private javax.swing.JTextArea projectlist;
    // End of variables declaration//GEN-END:variables

    
    private void setComboBoxes() {
    String [] month = new String[12];
    for(int i = 0; i < 12; i++) {
        month[i] = String.valueOf(i + 1);
    }
    Month.setModel(new javax.swing.DefaultComboBoxModel(month));
    Month1.setModel(new javax.swing.DefaultComboBoxModel(month));
    
    String [] day = new String[31];
    for(int i = 0; i < 31; i++) {
        day[i] = String.valueOf(i + 1);
    }
    Day.setModel(new javax.swing.DefaultComboBoxModel(day));
    Day1.setModel(new javax.swing.DefaultComboBoxModel(day));
    
    String [] year = new String[120];
    for(int i = 0; i < 120; i++) {
        year[i] = String.valueOf(2013 - i);
        
     
    }
    Year.setModel(new javax.swing.DefaultComboBoxModel(year));
    Year1.setModel(new javax.swing.DefaultComboBoxModel(year));
    
    String [] sex = new String[2];
    sex[0] = "M";
    sex[1] = "F";
    Sex.setModel(new javax.swing.DefaultComboBoxModel(sex));
    Sex1.setModel(new javax.swing.DefaultComboBoxModel(sex));
    
    

}
    private void setProjectComboBoxesAndTextArea(int myDnum) {
        String [] project = new String[15];
        project[0] = "";
        int count = 1;
        try {
                // TODO add your handling code here:
                
                ResultSet results = statement.executeQuery("select pname, pnumber, dnum from project");
                projectlist.setText("");
                projectlist.append("***** Available Projects *****\n");
                while (results.next())
                {
                    String pname = results.getString(1);
                    int pnum = results.getInt(2);
                    int dnum = results.getInt(3);
                    
                    if(dnum == myDnum)
                        projectlist.append("*");
                    projectlist.append("" + pnum + " - " + pname + "\n"); 
                    project[count] = String.valueOf(pnum);
                    count++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        projectlist.append("\n* - Project is in same department as employee\n");
        String[] contents = new String[count];
        System.arraycopy(project, 0, contents, 0, count);
        
        
        pd1.setModel(new javax.swing.DefaultComboBoxModel(contents));
        pd2.setModel(new javax.swing.DefaultComboBoxModel(contents));
        pd3.setModel(new javax.swing.DefaultComboBoxModel(contents));
        pd4.setModel(new javax.swing.DefaultComboBoxModel(contents));
        pd5.setModel(new javax.swing.DefaultComboBoxModel(contents));
        
    }
    
    private int calcProjectHours() {
        int total = 0;
        if(!"".equals(phours1.getText()))
            total += Integer.parseInt(phours1.getText());
        if(!"".equals(phours2.getText()))
            total += Integer.parseInt(phours2.getText());
        if(!"".equals(phours3.getText()))
            total += Integer.parseInt(phours3.getText());
        if(!"".equals(phours4.getText()))
            total += Integer.parseInt(phours4.getText());
        if(!"".equals(phours5.getText()))
            total += Integer.parseInt(phours5.getText());
        
        return total;
        
    }
}


